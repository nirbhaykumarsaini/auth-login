{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nirbh\\\\OneDrive\\\\Desktop\\\\Company Auth Project\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport EmployeeForm from './pages/EmployeeForm';\nimport EmployeeTable from './pages/EmployeeTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [editingEmployee, setEditingEmployee] = useState(null);\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        const token = localStorage.getItem('token'); // Retrieve the token from localStorage\n        const response = await axios.get('http://localhost:5000/api/employees', {\n          headers: {\n            Authorization: `Bearer ${token}` // Attach the token to the request\n          }\n        });\n        setEmployees(response.data);\n      } catch (error) {\n        console.error('Error fetching employees:', error);\n      }\n    };\n    fetchEmployees();\n  }, []);\n  const handleSave = () => {\n    setEditingEmployee(null);\n    // Re-fetch employees to get the latest list\n    const fetchEmployees = async () => {\n      try {\n        const token = localStorage.getItem('token'); // Retrieve the token\n        const response = await axios.get('http://localhost:5000/api/employees', {\n          headers: {\n            Authorization: `Bearer ${token}` // Attach the token\n          }\n        });\n        setEmployees(response.data);\n      } catch (error) {\n        console.error('Error fetching employees:', error);\n      }\n    };\n    fetchEmployees();\n  };\n  const handleEdit = employee => {\n    setEditingEmployee(employee);\n  };\n  const handleDelete = id => {\n    setEmployees(prev => prev.filter(emp => emp.f_Id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Employee Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), editingEmployee ? /*#__PURE__*/_jsxDEV(EmployeeForm, {\n      employee: editingEmployee,\n      onSave: handleSave,\n      onCancel: () => setEditingEmployee(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(EmployeeForm, {\n      onSave: handleSave,\n      onCancel: () => setEditingEmployee(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(EmployeeTable, {\n      employees: employees,\n      onEdit: handleEdit,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9oHIzW/Ov9EOzp+Zm7XXtgS5kQQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","EmployeeForm","EmployeeTable","jsxDEV","_jsxDEV","App","_s","employees","setEmployees","editingEmployee","setEditingEmployee","fetchEmployees","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","handleSave","handleEdit","employee","handleDelete","id","prev","filter","emp","f_Id","children","fileName","_jsxFileName","lineNumber","columnNumber","onSave","onCancel","onEdit","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/nirbh/OneDrive/Desktop/Company Auth Project/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport EmployeeForm from './pages/EmployeeForm';\nimport EmployeeTable from './pages/EmployeeTable';\n\nconst App = () => {\n  const [employees, setEmployees] = useState([]);\n  const [editingEmployee, setEditingEmployee] = useState(null);\n\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      try {\n        const token = localStorage.getItem('token'); // Retrieve the token from localStorage\n        const response = await axios.get('http://localhost:5000/api/employees', {\n          headers: {\n            Authorization: `Bearer ${token}`, // Attach the token to the request\n          },\n        });\n        setEmployees(response.data);\n      } catch (error) {\n        console.error('Error fetching employees:', error);\n      }\n    };\n\n    fetchEmployees();\n  }, []);\n\n  const handleSave = () => {\n    setEditingEmployee(null);\n    // Re-fetch employees to get the latest list\n    const fetchEmployees = async () => {\n      try {\n        const token = localStorage.getItem('token'); // Retrieve the token\n        const response = await axios.get('http://localhost:5000/api/employees', {\n          headers: {\n            Authorization: `Bearer ${token}`, // Attach the token\n          },\n        });\n        setEmployees(response.data);\n      } catch (error) {\n        console.error('Error fetching employees:', error);\n      }\n    };\n\n    fetchEmployees();\n  };\n\n  const handleEdit = (employee) => {\n    setEditingEmployee(employee);\n  };\n\n  const handleDelete = (id) => {\n    setEmployees((prev) => prev.filter((emp) => emp.f_Id !== id));\n  };\n\n  return (\n    <div>\n      <h1>Employee Management</h1>\n      {editingEmployee ? (\n        <EmployeeForm employee={editingEmployee} onSave={handleSave} onCancel={() => setEditingEmployee(null)} />\n      ) : (\n        <EmployeeForm onSave={handleSave} onCancel={() => setEditingEmployee(null)} />\n      )}\n      <EmployeeTable employees={employees} onEdit={handleEdit} onDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}